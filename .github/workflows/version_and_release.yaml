name: Version and Release

on:
  pull_request:
    types: [closed]
    branches:
      - main

jobs:
  version:
    runs-on: ubuntu-latest
    if: github.event.pull_request.merged == true
    permissions:
      contents: write
      pull-requests: read
    outputs:
      new_version: ${{ steps.increment.outputs.new_version }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          ref: main

      - name: Set up Python and Node.js
        uses: actions/setup-python@v5
        with:
          python-version: '3.x'
      - uses: actions/setup-node@v4
        with:
          node-version: '18'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install bump2version
          npm install

      - name: Increment Version
        id: increment
        run: |
          increment_type="patch" # Default increment type
          pr_title="${{ github.event.pull_request.title }}"

          if [[ "$pr_title" == *"[major]"* ]]; then
            increment_type="major"
          elif [[ "$pr_title" == *"[minor]"* ]]; then
            increment_type="minor"
          fi

          bump2version --allow-dirty $increment_type
          new_version=$(grep -oP '"version": "\K[^"]+' custom_components/meraki_ha/manifest.json)
          echo "new_version=$new_version" >> "$GITHUB_OUTPUT"

      - name: Update package.json version
        if: steps.increment.outputs.new_version != ''
        run: |
          echo "Synchronizing package.json version to: ${{ steps.increment.outputs.new_version }}"
          npm version ${{ steps.increment.outputs.new_version }} --no-git-tag-version --allow-same-version

      - name: Generate Changelog
        if: steps.increment.outputs.new_version != ''
        run: |
          npx conventional-changelog -p angular -i CHANGELOG.md -s
          # Generate release notes for the current version
          npx conventional-changelog -p angular -r 1 > RELEASE_NOTES.md

      - name: Commit and push changes
        if: steps.increment.outputs.new_version != ''
        uses: stefanzweifel/git-auto-commit-action@v6
        with:
          commit_message: 'chore(release): update version to ${{ steps.increment.outputs.new_version }} and CHANGELOG'
          file_pattern: 'custom_components/meraki_ha/manifest.json CHANGELOG.md package.json .bumpversion.cfg package-lock.json'
          commit_user_name: "github-actions[bot]"
          commit_user_email: "github-actions[bot]@users.noreply.github.com"
          commit_author: "github-actions[bot] <github-actions[bot]@users.noreply.github.com>"
          branch: main

      - name: Upload Release Notes
        if: steps.increment.outputs.new_version != ''
        uses: actions/upload-artifact@v3
        with:
          name: release-notes
          path: RELEASE_NOTES.md

  release:
    runs-on: ubuntu-latest
    needs: version
    if: needs.version.outputs.new_version != ''
    permissions:
      contents: write
    steps:
      - name: Download Release Notes
        uses: actions/download-artifact@v3
        with:
          name: release-notes

      - name: Create Release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: 'v${{ needs.version.outputs.new_version }}'
          release_name: 'Release v${{ needs.version.outputs.new_version }}'
          body_path: 'RELEASE_NOTES.md'
          draft: false
          prerelease: false
